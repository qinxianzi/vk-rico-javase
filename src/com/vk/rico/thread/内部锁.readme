内部锁，也称为对象锁。
以下情况释放对象锁：
	1)、代码正常执行完毕，退出同步代码。
	2)、代码抛出异常，退出同步代码。
	3)、在同步代码中调用wait方法。

ReentrantLock实现了Lock接口，并提供了与synchronized相同的互斥性和内存可见性。

为什么要创建一种与内置锁如此相似的新加锁机制呢？
在大多数情况下，内置锁都能很好地工作，但在功能上存在一些局限性，例如，无法中断一个正在等待获取锁的线程。


ReentrantLock不能完全代替synchronized的原因：
ReentrantLock更加危险，因为当程序的执行控制离开被保护的代码块时，不会自动清除锁。

